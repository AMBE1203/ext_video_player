// Autogenerated from Pigeon (v0.1.7), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class RtmpFLTTextureMessage;
@class RmtpFLTCreateMessage;
@class RtmpFLTLoopingMessage;
@class RtmpFLTVolumeMessage;
@class RtmpFLTPlaybackSpeedMessage;
@class RtmpFLTPositionMessage;
@class RtmpFLTMixWithOthersMessage;

@interface RtmpFLTTextureMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *textureId;
@end

@interface RmtpFLTCreateMessage : NSObject
@property(nonatomic, copy, nullable) NSString *asset;
@property(nonatomic, copy, nullable) NSString *uri;
@property(nonatomic, copy, nullable) NSString *packageName;
@property(nonatomic, copy, nullable) NSString *formatHint;
@end

@interface RtmpFLTLoopingMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *textureId;
@property(nonatomic, strong, nullable) NSNumber *isLooping;
@end

@interface RtmpFLTVolumeMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *textureId;
@property(nonatomic, strong, nullable) NSNumber *volume;
@end

@interface RtmpFLTPlaybackSpeedMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *textureId;
@property(nonatomic, strong, nullable) NSNumber *speed;
@end

@interface RtmpFLTPositionMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *textureId;
@property(nonatomic, strong, nullable) NSNumber *position;
@end

@interface RtmpFLTMixWithOthersMessage : NSObject
@property(nonatomic, strong, nullable) NSNumber *mixWithOthers;
@end

@protocol RtmpFLTVideoPlayerApi
- (void)initialize:(FlutterError *_Nullable *_Nonnull)error;
- (nullable RtmpFLTTextureMessage *)create:(RmtpFLTCreateMessage *)input
                                 error:(FlutterError *_Nullable *_Nonnull)error;
- (void)dispose:(RtmpFLTTextureMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setLooping:(RtmpFLTLoopingMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVolume:(RtmpFLTVolumeMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setPlaybackSpeed:(RtmpFLTPlaybackSpeedMessage *)input
                   error:(FlutterError *_Nullable *_Nonnull)error;
- (void)play:(RtmpFLTTextureMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable RtmpFLTPositionMessage *)position:(RtmpFLTTextureMessage *)input
                                    error:(FlutterError *_Nullable *_Nonnull)error;
- (void)seekTo:(RtmpFLTPositionMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pause:(RtmpFLTTextureMessage *)input error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setMixWithOthers:(RtmpFLTMixWithOthersMessage *)input
                   error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void RtmpFLTVideoPlayerApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                   id<RtmpFLTVideoPlayerApi> _Nullable api);

NS_ASSUME_NONNULL_END
